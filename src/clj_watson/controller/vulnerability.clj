(ns clj-watson.controller.vulnerability
  (:require
    [clj-watson.diplomat.dependency :as diplomat.dependency]
    [clj-watson.logic.vulnerability :as logic.vulnerability]
    [clojure.string :as string])
  (:import
    (org.owasp.dependencycheck.dependency Dependency)))

(defn ^:private extract-vulnerabilities-information-from-dependency
  [dependency dependency-current-version all-versions]
  (->> dependency
       .getVulnerabilities
       (pmap (partial logic.vulnerability/get-information dependency-current-version all-versions))
       (filter identity)))

(defn ^:private extract-from-dependency [deps project-dependencies ^Dependency dependency]
  (when-let [dependency-name (some-> dependency .getName (string/replace #":" "/") symbol)]
    (let [dependency-map (dependency-name project-dependencies)
          dependency-current-version (:mvn/version dependency-map)
          all-versions (diplomat.dependency/get-all-versions dependency-name deps)
          vulnerabilities (extract-vulnerabilities-information-from-dependency dependency
                                                                               dependency-current-version
                                                                               all-versions)]
      (when (seq vulnerabilities)
        (-> dependency-map
            (assoc :vulnerabilities vulnerabilities)
            (assoc :dependency-name dependency-name)
            (assoc :latest-version (last all-versions)))))))

(defn extract-from-dependencies [{:project/keys [deps dependencies] :as environment}]
  (let [dependency-check-dependencies (:dependency-check/dependencies environment)
        vulnerable-dependencies (->> dependency-check-dependencies
                                     (pmap (partial extract-from-dependency deps dependencies))
                                     (filterv identity))]
    (-> {}
        (assoc :deps deps)
        (assoc :dependencies dependencies)
        (assoc :vulnerable-dependencies vulnerable-dependencies))))