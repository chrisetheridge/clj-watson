(ns clj-watson.controller.vulnerability
  (:require [clojure.string :as string]
            [clj-watson.diplomat.dependency :as diplomat.dependency]
            [clj-watson.logic.vulnerability :as logic.vulnerability])
  (:import (org.owasp.dependencycheck.dependency Dependency)))

(defn ^:private extract-vulnerabilities-information-from-dependency
  [dependency dependency-current-version]
  (->> dependency
       .getVulnerabilities
       (pmap (partial logic.vulnerability/get-information dependency-current-version))
       (filter identity)))

(defn ^:private extract-from-dependency [deps project-dependencies ^Dependency dependency]
  (when-let [dependency-name (some-> dependency .getName (string/replace #":" "/") symbol)]
    (let [dependency-map (dependency-name project-dependencies)
          dependency-current-version (:mvn/version dependency-map)
          latest-version (diplomat.dependency/get-latest-version dependency-name deps)
          vulnerabilities (extract-vulnerabilities-information-from-dependency dependency dependency-current-version)]
      (when (seq vulnerabilities)
        (-> dependency-map
            (assoc :vulnerabilities vulnerabilities)
            (assoc :dependency-name dependency-name)
            (assoc :latest-version latest-version))))))

(defn extract-from-dependencies [{:project/keys [deps dependencies] :as environment}]
  (let [dependency-check-dependencies (:dependency-check/dependencies environment)]
    (->> dependency-check-dependencies
         (pmap (partial extract-from-dependency deps dependencies))
         (filterv identity))))